name: CI/CD with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PROJECT_PATH: src/ChatService/ChatService.csproj
  TEST_PATH: src/ChatService.Tests/ChatService.Tests.csproj

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install SonarScanner and ReportGenerator
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

      - name: Add tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"chat-service" \
            /o:"messaging" \
            /d:sonar.login="${{ secrets.SONAR_CLOUD_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="coverage/coverage.opencover.xml"

      - name: Build and Test
        run: |
          dotnet build $PROJECT_PATH --configuration Release
          dotnet test $TEST_PATH --no-build --configuration Release \
            --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Generate OpenCover coverage report
        run: |
          mkdir -p coverage
          reportgenerator \
            -reports:"TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage" \
            -reporttypes:"opencover"

      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_CLOUD_TOKEN }}"
